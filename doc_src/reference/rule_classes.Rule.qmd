# rule_classes.Rule { #fave_recode.rule_classes.Rule }

`rule_classes.Rule(self, rule)`

_A rule class_

## Attributes

| Name       | Type                   | Description           |
|------------|------------------------|-----------------------|
| rule       | str                    | The name of the rule  |
| conditions | list\[Condition, ...\] | A  list of conditions |
| output     | str                    | The rewrite output    |

## Methods

| Name | Description |
| --- | --- |
| [apply_rule](#fave_recode.rule_classes.Rule.apply_rule) | _Apply a single rile_ |
| [validate_rule](#fave_recode.rule_classes.Rule.validate_rule) | _Validate the rule wellformedness_ |

### apply_rule { #fave_recode.rule_classes.Rule.apply_rule }

`rule_classes.Rule.apply_rule(obj)`

_Apply a single rile_

#### Parameters

| Name   | Type             | Description                               | Default    |
|--------|------------------|-------------------------------------------|------------|
| `obj`  | SequenceInterval | The interval potentially being relabelled | _required_ |

#### Raises

| Type      | Description                           |
|-----------|---------------------------------------|
| Exception | Any errors in checking the conditions |

#### Returns

| Type   | Description                |
|--------|----------------------------|
| bool   | `True` if the rule applied |

### validate_rule { #fave_recode.rule_classes.Rule.validate_rule }

`rule_classes.Rule.validate_rule(rule)`

_Validate the rule wellformedness_

#### Parameters

| Name   | Type   | Description         | Default    |
|--------|--------|---------------------|------------|
| `rule` | dict   | The rule dictionary | _required_ |

#### Raises

| Type      | Description                   |
|-----------|-------------------------------|
| Exception | Any errors from the validator |