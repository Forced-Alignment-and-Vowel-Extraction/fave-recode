project:
  type: website
  output-dir: _site

website:
  page-navigation: true
  image: assets/logo.png
  navbar:
    left:
      - file: getting-started/overview.qmd
        text: Get Started
      - href: reference/
        text: Reference        
    right:
      - icon: github
        href: https://github.com/Forced-Alignment-and-Vowel-Extraction/fave-recode        
  sidebar:
    - id: get-started
      logo: assets/logo.png
      collapse-level: 3
      title: Get Started
      style: floating
      align: left
      contents:
        - getting-started/overview.qmd
        - section: Processing patterns
          contents: 
            - getting-started/single-file.qmd
            - getting-started/directory.qmd
        - section: Customizing a recoding scheme
          contents:
            - getting-started/rule-scheme-basics.qmd
            - getting-started/rule-application.qmd
            - section: Details
              contents:
                - getting-started/condition-attributes.qmd
                - getting-started/condition-relations.qmd


format:
  html: 
    theme:
      light: flatly
      dark: darkly
    toc: true

# tell quarto to read the generated sidebar
metadata-files:
  - reference/_sidebar.yml

filters:
  - "interlinks"

interlinks:
  sources:
    python:
      url: https://docs.python.org/3/
    griffe:
      url: https://mkdocstrings.github.io/griffe/


quartodoc:
  # the name used to import the package you want to create reference docs for
  package: fave_recode
  style: pkgdown
  dir: reference
  # write sidebar data to this file
  sidebar: "reference/_sidebar.yml"
  parser: google
  render_interlinks: true
  sections:
    - title: Rule Classes
      desc: Rule application classes
      contents:
        - rule_classes.Condition
        - rule_classes.Rule
        - rule_classes.RuleSet
    - title: Relations
    - subtitle: "`in`, `not in`"
      contents:
        - relations.in_relation
        - relations.not_in_relation
    - subtitle: "equals, not equals"
      contents:
        - relations.equals_relation
        - relations.not_equals_relation
    - subtitle: "Regex match"
      contents:
        - relations.rematches_relation
        - relations.reunmatches_relation

